//  
// 	
//  L4D MOVE MACRO:  
//			This macro is useful for creating 8-way movement sequences. It relies on using a strict naming 
//			convention for your dmx's. (character_movement(direction)_weapon) (ex. coach_runN_rifle).
//			The rStep and lStep inputs are for footstep events. enter the frames where the feet contact the ground
//	
//	Usage: 		L4DmoveMacro <char> <move> <weapon> <aim_matrix> <idle(dmx)> <activity> <rStep1> <lStep1> <rStep2>  <lStep2>
//	Example: $L4DMoveMacro 	coach 	run 	rifle 	coach_aimmatrix_rifle_standing	coach_idle_standing_rifle act_run_rifle 17 36 7 26
//
//
//
//
$definemacro L4DMoveMacro char move wep aim idle act rStep1 rStep2 lStep1 lStep2 \\
	$animation a_$idle$_$move$							$idle$ \\
	$animation a_$char$_$move$N_$wep$ 		$char$_$move$N_$wep$ 	loop LX LY \\
	$animation a_$char$_$move$S_$wep$ 		$char$_$move$S_$wep$	loop LX LY \\
	$animation a_$char$_$move$E_$wep$ 		$char$_$move$E_$wep$ 	loop LX LY \\
	$animation a_$char$_$move$W_$wep$ 		$char$_$move$W_$wep$ 	loop LX LY \\
	$animation a_$char$_$move$NE_$wep$ 		$char$_$move$NE_$wep$ loop LX LY \\          
	$animation a_$char$_$move$NW_$wep$		$char$_$move$NW_$wep$ loop LX LY \\          
	$animation a_$char$_$move$SE_$wep$ 		$char$_$move$SE_$wep$ loop LX LY \\          
	$animation a_$char$_$move$SW_$wep$ 		$char$_$move$SW_$wep$ loop LX LY \\          
	$sequence $char$_$move$_$wep$ { \\
		a_$char$_$move$NE_$wep$	a_$char$_$move$N_$wep$	a_$char$_$move$NW_$wep$	\\
		a_$char$_$move$E_$wep$  a_$idle$_$move$					a_$char$_$move$W_$wep$  \\
		a_$char$_$move$SE_$wep$	a_$char$_$move$S_$wep$	a_$char$_$move$SW_$wep$ \\
		blendwidth 3 blend move_y -1 1 blend move_x 1 -1                        \\
		addlayer $aim$																													\\	
		activity $act$	1																												\\
		 event AE_FOOTSTEP_RIGHT $rStep1$																				\\
		 event AE_FOOTSTEP_LEFT $lStep1$ 																				\\
		 event AE_FOOTSTEP_RIGHT $rStep2$ 																			\\
		 event AE_FOOTSTEP_LEFT $lStep2$ 																				\\	
	}																																					\\


